//
//  PlacesListView.swift
//  BestPlaces
//
//  Created by kristof on 2025. 10. 07..
//

import SwiftUI

struct PlacesListView: View {
    @State private var places: [Place] = [
        Place(name: "Eiffel-torony", description: "P√°rizs ikonikus tornya.", icon: "üóº"),
        Place(name: "Szabads√°g-szobor", description: "Neoklasszicista szobor New York kik√∂t≈ëj√©ben.", icon: "üóΩ"),
        Place(name: "Kolosszeum", description: "Ov√°lis amfite√°trum R√≥ma k√∂zpontj√°ban.", icon: "üèõ")
    ]
    @State private var showingAddPlaceSheet: Bool = false
    
    var body: some View {
        NavigationStack { // ez seg√≠t detail view-ra navig√°lni, de kell link majd hozz√°. n√©lk√ºle nem lenne "stack"
            List(places) { place in // ez√©rt kell az Identifiable protokoll, hogy be tudja j√°rni
                NavigationLink(destination: PlaceDetailView(place: place)) // megnyitja a n√©zetet, ha r√°kattintok a Text(place.name) sz√∂veggel
                {
//                  Label(place.icon, systemImage: "")
                    Text(place.icon + place.name + " ez navis")
                }
//                HStack { // nem navig√°lnak sehova
//                    Text(place.icon)
//                    Text(place.name)
//                }
            }
            .navigationTitle("Kedvenc helyeim") // a List neve
            .toolbar {
                ToolbarItem(placement: .navigationBarTrailing) {
                    Button(
                        action: {
                            print("megnyomtad a plus gombot")
                            showingAddPlaceSheet = true
                        },
                        label: { Image(systemName: "plus") }
                    ) // Button\
                }
            }
            .sheet(isPresented: $showingAddPlaceSheet) {
                AddPlaceView(places: $places)
            }
        }
    }
}

struct PlacesListView_Previews: PreviewProvider {
    static var previews: some View {
        PlacesListView()
        }
    }

